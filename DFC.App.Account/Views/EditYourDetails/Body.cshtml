@using DFC.App.Account.Application.Common.Extensions
@using DFC.App.Account.Application.Common.Models
@using DFC.App.Account.ViewModels
@using Newtonsoft.Json
@model DFC.App.Account.ViewModels.EditDetailsCompositeViewModel

<partial name="~/ViewComponents/ErrorSummary/ErrorSummaryComponent.cshtml"/>
<div class="govuk-width-container">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
        <govukHeadingH1 text="Edit your details"></govukHeadingH1>

        <form id="@Model.GetElementId("form", "editYourDetails")" action="@Model.CompositeSettings.Path/@CompositeViewModel.PageId.EditDetails" class="govuk-form-group mt" method="post">

        <table class="govuk-table govuk-visually-hidden" aria-label="Your personal details">
            <govukHeadingH2 text="Your personal details" additional-class="govuk-visually-hidden"></govukHeadingH2>
            <tbody class="govuk-table__body">
            <tr class="govuk-table__row">
                <th scope="row" class="govuk-table__header">@Html.LabelFor(m => m.Identity.PersonalDetails.Title, new {@class = "govuk-label"})</th>
                <td class="govuk-table__cell">
                    @HtmlExtensions.GetClass(Html.NameFor(m => m.Identity.PersonalDetails.Title).ToString(), ViewData.ModelState)
                    <div class="govuk-form-group @(Model.GetFormGroupErrorClass(Html.NameFor(m => m.Identity.PersonalDetails.Title).ToString(), ViewData.ModelState))">
                        @Html.ValidationMessageFor(m => m.Identity.PersonalDetails.Title, null, new {@class = "govuk-error-message"})
                        @Html.DropDownListFor(m => m.Identity.PersonalDetails.Title, Html.GetEnumSelectList(Model.Identity.PersonalDetails.Title.GetType()), new {@class = $"govuk-select {Model.GetErrorClass(Html.NameFor(m => m.Identity.PersonalDetails.Title).ToString(), ViewData.ModelState)}"})
                    </div>
                    <div class="govuk-form-group"> </div>
                </td>
            </tr>
            <tr class="govuk-table__row">
                <th scope="row" class="govuk-table__header">
                    @Html.LabelFor(m => m.Identity.PersonalDetails.GivenName, new {@class = "govuk-label"})
                </th>
                <td class="govuk-table__cell">
                    <div class="govuk-form-group @(Model.GetFormGroupErrorClass(Html.NameFor(m => m.Identity.PersonalDetails.GivenName).ToString(), ViewData.ModelState))">
                        @Html.ValidationMessageFor(model => model.Identity.PersonalDetails.GivenName, null, new {@class = "govuk-error-message"})
                        @Html.TextBoxFor(model => model.Identity.PersonalDetails.GivenName, new {@class = $"govuk-input {Model.GetErrorClass(Html.NameFor(m => m.Identity.PersonalDetails.GivenName).ToString(), ViewData.ModelState)}"})
                    </div>
                    <div class="govuk-form-group"> </div>
                </td>
            </tr>
            <tr class="govuk-table__row">
                <th scope="row" class="govuk-table__header">@Html.LabelFor(m => m.Identity.PersonalDetails.FamilyName, new {@class = "govuk-label"})</th>
                <td class="govuk-table__cell">
                    <div class="govuk-form-group @(Model.GetFormGroupErrorClass(Html.NameFor(m => m.Identity.PersonalDetails.FamilyName).ToString(), ViewData.ModelState))">
                        @Html.ValidationMessageFor(model => model.Identity.PersonalDetails.FamilyName, null, new {@class = "govuk-error-message"})
                        @Html.TextBoxFor(model => model.Identity.PersonalDetails.FamilyName, new {@class = $"govuk-input {Model.GetErrorClass(Html.NameFor(m => m.Identity.PersonalDetails.FamilyName).ToString(), ViewData.ModelState)}"})
                    </div>
                    <div class="govuk-form-group"> </div>
                </td>
            </tr>
            <tr class="govuk-table__row">
                @{
                    var dobError = HtmlExtensions.GetDOBClass(Html.NameFor(m => m.Identity.PersonalDetails.DateOfBirth).ToString(),
                        Html.NameFor(m => m.Identity.PersonalDetails.DateOfBirthDay).ToString(),
                        Html.NameFor(m => m.Identity.PersonalDetails.DateOfBirthMonth).ToString(),
                        Html.NameFor(m => m.Identity.PersonalDetails.DateOfBirthYear).ToString(),
                        ViewData.ModelState);
                    var dobInputError = string.IsNullOrEmpty(dobError) ? "" : "govuk-input--error";
                }
                <th scope="row" class="govuk-table__header">@Html.LabelFor(m => m.Identity.PersonalDetails.DateOfBirth, new {@class = "govuk-label"})</th>
                <td class="govuk-table__cell">
                    @Model.Identity.PersonalDetails.DateOfBirth?.ToString("dd MMMM yyyy")
                </td>
            </tr>
            <tr class="govuk-table__row">
                <th scope="row" class="govuk-table__header">@Html.LabelFor(m => m.Identity.PersonalDetails.Gender, new {@class = "govuk-label"})</th>
                <td class="govuk-table__cell">
                    <div class="govuk-form-group @(Model.GetFormGroupErrorClass(Html.NameFor(m => m.Identity.PersonalDetails.Gender).ToString(), ViewData.ModelState))">
                        @Html.DropDownListFor(m => m.Identity.PersonalDetails.Gender, Html.GetEnumSelectList(Model.Identity.PersonalDetails.Gender.GetType()), new {@class = $"govuk-select {Model.GetErrorClass(Html.NameFor(m => m.Identity.PersonalDetails.Gender).ToString(), ViewData.ModelState)}"})
                    </div>
                    <div class="govuk-form-group"> </div>
                </td>
            </tr>
            </tbody>
        </table>

        <h2 class="heading-medium">Your contact details</h2>
        <table class="govuk-table" aria-label="your contact details">
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">@Html.LabelFor(m => m.Identity.ContactDetails.HomeNumber, new { @class = "govuk-label" })</th>
                    <td class="govuk-table__cell  ">
                        <div class="govuk-form-group @HtmlExtensions.GetClass(Html.NameFor(m => m.Identity.ContactDetails.HomeNumber).ToString(), ViewData.ModelState)">
                            @Html.ValidationMessageFor(model => model.Identity.ContactDetails.HomeNumber, null, new { @class = "govuk-error-message" })
                            @Html.TextBoxFor(model => model.Identity.ContactDetails.HomeNumber, new { @class = $"govuk-input {Model.GetErrorClass(Html.NameFor(m => m.Identity.ContactDetails.HomeNumber).ToString(), ViewData.ModelState)}" })
                        </div>
                        <div class="govuk-form-group"> </div>
                    </td>
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">@Html.LabelFor(m => m.Identity.ContactDetails.MobileNumber, new { @class = "govuk-label" })</th>
                    <td class="govuk-table__cell  ">
                        <div class="govuk-form-group @HtmlExtensions.GetClass(Html.NameFor(m => m.Identity.ContactDetails.MobileNumber).ToString(), ViewData.ModelState)">
                            @Html.ValidationMessageFor(model => model.Identity.ContactDetails.MobileNumber, null, new { @class = "govuk-error-message" })
                            @Html.TextBoxFor(model => model.Identity.ContactDetails.MobileNumber, new { @class = $"govuk-input {Model.GetErrorClass(Html.NameFor(m => m.Identity.ContactDetails.MobileNumber).ToString(), ViewData.ModelState)}" })
                        </div>
                        <div class="govuk-form-group"> </div>
                    </td>
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">@Html.LabelFor(m => m.Identity.ContactDetails.TelephoneNumberAlternative, new { @class = "govuk-label" })</th>
                    <td class="govuk-table__cell   ">
                        <span class="govuk-hint">
                            If you remove this phone number, telephone and face-to-face advisers won't be able to contact you on this number anymore.
                        </span>
                        <div class="govuk-form-group @HtmlExtensions.GetClass(Html.NameFor(m => m.Identity.ContactDetails.TelephoneNumberAlternative).ToString(), ViewData.ModelState)">
                            @Html.ValidationMessageFor(model => model.Identity.ContactDetails.TelephoneNumberAlternative, null, new { @class = "govuk-error-message" })
                            @Html.TextBoxFor(model => model.Identity.ContactDetails.TelephoneNumberAlternative, new { @class = $"govuk-input {Model.GetErrorClass(Html.NameFor(m => m.Identity.ContactDetails.TelephoneNumberAlternative).ToString(), ViewData.ModelState)}" })
                        </div>
                        <div class="govuk-form-group"> </div>
                    </td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">@Html.LabelFor(m => m.Identity.ContactDetails.ContactPreference, new { @class = "govuk-label" })</th>
                    <td class="govuk-table__cell ">
                        <div class="govuk-form-group @HtmlExtensions.GetClass(Html.NameFor(m => m.Identity.ContactDetails.ContactPreference).ToString(), ViewData.ModelState)">
                            @Html.ValidationMessageFor(model => model.Identity.ContactDetails.ContactPreference, null, new { @class = "govuk-error-message" })
                            @Html.DropDownListFor(m => m.Identity.ContactDetails.ContactPreference, Html.GetEnumSelectList(Model.Identity.ContactDetails.ContactPreference.GetType()), new { @class = $"govuk-select {Model.GetErrorClass(Html.NameFor(m => m.Identity.ContactDetails.ContactPreference).ToString(), ViewData.ModelState)}" })
                        </div>
                        <div class="govuk-form-group"> </div>

                    </td>
                </tr>
            </tbody>
        </table>


        <h2 class="heading-medium">Your marketing preferences</h2>
            <p class="govuk-body">We may want to speak to you in line with our <a href="/help/privacy-and-cookies" class="govuk-link">privacy policy</a>. You can opt out at any time.</p>
            <p class="govuk-body">Select the options that apply to you.</p>
            <p class="govuk-body">I want to take part in:</p>

        <legend class="govuk-visually-hidden">
            Your marketing preferences
        </legend>
        <div class="govuk-form-group govuk-checkboxes govuk-checkboxes--small">


            <govukCheckbox id="@Model.GetElementId("govukCheckBox", "marketing-opt-out")"
                           label="user research"
                           AdditionalClass="checkbox-container-item govuk-checkboxes"
                           name="MarketingOptIn"
                           checked="@Model.Identity.MarketingPreferences.MarketingOptIn">
            </govukCheckbox>

            <govukCheckbox id="@Model.GetElementId("govukCheckBox", "market-research")"
                           label="market research"
                           AdditionalClass="checkbox-container-item govuk-checkboxes"
                           name="MarketResearchOptIn"
                           checked="@Model.Identity.MarketingPreferences.MarketResearchOptIn">
            </govukCheckbox>
        </div>

        <div class="govuk-form-group">
            <button id="@Model.GetElementId("govukButton", "Save")" class="govuk-button" type="submit" value="Save details" name="saveDetails" data-module="govuk-button">
                Save my changes
            </button>
        </div>

        <p>or <a href="~/your-account/home">cancel and return to your account.</a></p>

        </form>
        </div>

        <div class="govuk-grid-column-one-third">
            <partial name="~/ViewComponents/SpeakToAdviser/SpeakToAdvisorComponent.cshtml"/>
        </div>
    </div>
</div>